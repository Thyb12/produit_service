name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker image
        run: docker build -t produit_service .

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache SonarQube packages
        uses: actions/cache@v2
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Cache SonarQube scanner
        uses: actions/cache@v2
        with:
          path: ~/.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            -Dsonar.projectKey=your_project_key \
            -Dsonar.organization=your_organization \
            -Dsonar.sources=. \
            -Dsonar.host.url=https://your_sonarqube_server_url \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: Quality Gate
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          STATUS=$(curl -s -u ${{ secrets.SONAR_TOKEN }}: \
          "https://your_sonarqube_server_url/api/qualitygates/project_status?projectKey=your_project_key" | jq -r .projectStatus.status)
          if [ "$STATUS" != "OK" ]; then
            echo "Quality Gate failed: $STATUS"
            exit 1
          fi
